MODULE = Panda::WebSocket                PACKAGE = Panda::WebSocket::ConnectRequest
PROTOTYPES: DISABLE

BOOT {
    xs::register_package("Panda::WebSocket::ConnectRequest", "Panda::WebSocket");
    xs::inherit_package("Panda::WebSocket::ConnectRequest", "Panda::WebSocket::HTTPRequest");
}

SV* panda::websocket::ConnectRequest::new (HV* params = NULL) {
    auto res = new ConnectRequest();
    RETVAL = typemap_outcast<panda::websocket::ConnectRequest*, const char* CLASS>(res, CLASS);
    if (params) xs::call_method_void(RETVAL, "init", 4, &ST(1), 1);
}

void panda::websocket::ConnectRequest::init (HV* params) {
    SV** ref;
    
    if ((ref = hv_fetchs(params, "ws_key", 0)))      THIS->ws_key      = sv2string(aTHX_ *ref);
    if ((ref = hv_fetchs(params, "ws_version", 0)))  THIS->ws_version  = SvIV(*ref);
    if ((ref = hv_fetchs(params, "ws_protocol", 0))) THIS->ws_protocol = sv2string(aTHX_ *ref);
    
    if ((ref = hv_fetchs(params, "ws_extensions", 0))) {
        AV* exts_av = typemap_incast<AV*>(*ref);
        HTTPPacket::HeaderValues exts;
        if (exts_av) av_to_header_values(aTHX_ exts_av, &exts);
        THIS->ws_extensions(exts);
    }
    
    xs::call_super(cv, &ST(0), items);
}

string panda::websocket::ConnectRequest::ws_key (SV* newval = NULL) {
    if (newval) {
        THIS->ws_key = sv2string(aTHX_ newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->ws_key;
}

int panda::websocket::ConnectRequest::ws_version (SV* newval = NULL) {
    if (newval) {
        THIS->ws_version = SvIV(newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->ws_version;
}

AV* panda::websocket::ConnectRequest::ws_extensions (AV* exts_av = NULL) {
    if (exts_av) {
        HTTPPacket::HeaderValues exts;
        av_to_header_values(aTHX_ exts_av, &exts);
        THIS->ws_extensions(exts);
        XSRETURN_UNDEF;
    }
    
    RETVAL = header_values_to_av(aTHX_ THIS->ws_extensions());
    if (!RETVAL) XSRETURN_UNDEF;
}

string panda::websocket::ConnectRequest::ws_protocol (SV* newval = NULL) {
    if (newval) {
        THIS->ws_protocol = sv2string(aTHX_ newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->ws_protocol;
}

bool panda::websocket::ConnectRequest::ws_version_supported ()
