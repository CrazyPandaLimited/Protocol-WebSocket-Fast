MODULE = Panda::WebSocket                PACKAGE = Panda::WebSocket::ClientParser
PROTOTYPES: DISABLE

BOOT {
    Stash client_parser_stash("Panda::WebSocket::ClientParser");
    client_parser_stash.mark_as_loaded(main_stash);
    client_parser_stash.inherit(parser_stash);
}

ClientParser* new (SV* CLASS) {
    RETVAL = new ClientParser();
    PROTO = Stash::from_name(CLASS).bless();
}

size_t ClientParser::max_handshake_size (SV* newval = NULL) {
    if (newval) THIS->max_handshake_size = SvUV(newval);
    RETVAL = THIS->max_handshake_size;
}

string ClientParser::connect_request (Scalar reqsv) {
    if (!reqsv.is_object_ref()) reqsv = connect_request_stash.call("new", reqsv);
    ConnectRequestSP req = xs::in<ConnectRequestSP>(reqsv);
    RETVAL = THIS->connect_request(req);
}

ConnectResponseSP ClientParser::connect (string buf) {
    RETVAL = THIS->connect(buf);
}
