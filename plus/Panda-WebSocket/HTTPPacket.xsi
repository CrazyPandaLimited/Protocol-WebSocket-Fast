MODULE = Panda::WebSocket                PACKAGE = Panda::WebSocket::HTTPPacket
PROTOTYPES: DISABLE

BOOT {
    xs::register_package(aTHX_ "Panda::WebSocket::HTTPPacket", "Panda::WebSocket");
}

void init (panda::websocket::HTTPPacketSP THIS, HV* params) {
    SV** ref;
    if ((ref = hv_fetchs(params, "headers", 0))) http_packet_set_headers(aTHX_ THIS, typemap_incast<HV*>(*ref));
    if ((ref = hv_fetchs(params, "body", 0)))    http_packet_set_body(aTHX_ THIS, *ref);
}

string error (panda::websocket::HTTPPacketSP THIS) {
    RETVAL = THIS->error;
    if (!RETVAL) XSRETURN_UNDEF;
}

bool header_ok (panda::websocket::HTTPPacketSP THIS) {
    RETVAL = THIS->header_ok();
}

size_t content_length (panda::websocket::HTTPPacketSP THIS) {
    RETVAL = THIS->content_length();
}

HV* headers (panda::websocket::HTTPPacketSP THIS, HV* new_headers = NULL) {
    if (new_headers) {
        http_packet_set_headers(aTHX_ THIS, new_headers);
        XSRETURN_UNDEF;
    }
    
    RETVAL = newHV();
    for (const auto& elem : THIS->headers) {
        auto len = elem.first.length();
        char key[len];
        std::transform(elem.first.data(), elem.first.data() + len, key, ::tolower);
        hv_store(RETVAL, key, len, newSVpvn(elem.second.data(), elem.second.length()), 0);
    }
}

string header (panda::websocket::HTTPPacketSP THIS, string_view name, SV* val = NULL) {
    if (val) {
        string value = sv2string(aTHX_ val);
        auto it = THIS->headers.find(name);
        if (it == THIS->headers.cend()) THIS->headers.emplace(string(name), value);
        else it->second = value;
        XSRETURN_UNDEF;
    }
    
    auto it = THIS->headers.find(name);
    if (it != THIS->headers.cend()) RETVAL = it->second;
    else XSRETURN_UNDEF;
}

SV* body (panda::websocket::HTTPPacketSP THIS, SV* newval = NULL) {
    if (newval) {
        http_packet_set_body(aTHX_ THIS, newval);
        XSRETURN_UNDEF;
    }
    RETVAL = strings_to_sv(aTHX_ THIS->body);
}

void clear (panda::websocket::HTTPPacketSP THIS) {
    THIS->clear();
}

void DESTROY (panda::websocket::HTTPPacketSP THIS) {}
