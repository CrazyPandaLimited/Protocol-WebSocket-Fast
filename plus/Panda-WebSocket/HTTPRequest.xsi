MODULE = Panda::WebSocket                PACKAGE = Panda::WebSocket::HTTPRequest
PROTOTYPES: DISABLE

BOOT {
    Stash http_request_stash("Panda::WebSocket::HTTPRequest");
    http_request_stash.mark_as_loaded(main_stash);
    http_request_stash.inherit(http_packet_stash);
}

Object new (SV* CLASS, Hash params = Hash()) {
    auto res = new HTTPRequest();
    RETVAL = xs::out<HTTPRequestSP>(res, Stash::from_name(CLASS).bless());
    if (params) RETVAL.call("init", ST(1));
}

void init (HTTPRequestSP THIS, Hash params) {
    Scalar val;
    
    if ((val = params.fetch("method"))) THIS->method = xs::in<string>(aTHX_ val);
    
    if ((val = params.fetch("uri"))) {
        if (val.is_object_ref()) THIS->uri = xs::in<URI*>(val);
        else THIS->uri = new URI(xs::in<string>(aTHX_ val));
    }
    
    Object(ST(0)).call_super(cv, &ST(1), items-1);
}

string method (HTTPRequestSP THIS, SV* newval = NULL) {
    if (newval) {
        THIS->method = xs::in<string>(aTHX_ newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->method;
}

URI* uri (HTTPRequestSP THIS, URI* newval = NULL) {
    if (newval) {
        THIS->uri = newval;
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->uri;
}
