MODULE = Panda::WebSocket                PACKAGE = Panda::WebSocket::HTTPRequest
PROTOTYPES: DISABLE

BOOT {
    xs::register_package("Panda::WebSocket::HTTPRequest", "Panda::WebSocket");
    xs::inherit_package("Panda::WebSocket::HTTPRequest", "Panda::WebSocket::HTTPPacket");
}

SV* new (SV* CLASS, SV* params = NULL) {
    auto res = new HTTPRequest();
    RETVAL = typemap_outcast<panda::websocket::HTTPRequestSP, SV* CLASS>(res, CLASS);
    if (params) xs::call_method_void(RETVAL, "init", 4, &ST(1), 1);
}

void init (panda::websocket::HTTPRequestSP THIS, HV* params) {
    SV** ref;
    
    if ((ref = hv_fetchs(params, "method", 0))) THIS->method = sv2string(aTHX_ *ref);
    
    if ((ref = hv_fetchs(params, "uri", 0))) {
        if (sv_isobject(*ref)) THIS->uri = typemap_incast<panda::uri::URI*>(*ref);
        else THIS->uri = new panda::uri::URI(sv2string(aTHX_ *ref));
    }
    
    xs::call_super(cv, &ST(0), items);
}

string method (panda::websocket::HTTPRequestSP THIS, SV* newval = NULL) {
    if (newval) {
        THIS->method = sv2string(aTHX_ newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->method;
}

panda::uri::URI* uri (panda::websocket::HTTPRequestSP THIS, panda::uri::URI* newval = NULL) {
    if (newval) {
        THIS->uri = newval;
        XSRETURN_UNDEF;
    }
    const char* CLASS = "Panda::URI";
    RETVAL = THIS->uri;
}