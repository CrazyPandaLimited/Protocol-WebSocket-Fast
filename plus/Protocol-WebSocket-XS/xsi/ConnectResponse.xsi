MODULE = Protocol::WebSocket::XS                PACKAGE = Protocol::WebSocket::XS::ConnectResponse
PROTOTYPES: DISABLE

BOOT {
    Stash(__PACKAGE__).inherit("Protocol::HTTP::Response");
}

ConnectResponseSP ConnectResponse::new (Hash params = Hash()) {
    RETVAL = new ConnectResponse();
    make_response(params, RETVAL);
}

string ConnectResponse::ws_accept_key ()

string ConnectResponse::ws_version ()

Array ConnectResponse::ws_extensions (Array exts_av = Array()) {
    if (exts_av) {
        HeaderValues exts;
        av_to_header_values(exts_av, &exts);
        THIS->ws_extensions(exts);
        XSRETURN_UNDEF;
    }

    RETVAL = header_values_to_av(THIS->ws_extensions());
}

string ConnectResponse::ws_protocol (SV* newval = NULL) {
    if (newval) {
        THIS->ws_protocol = xs::in<string>(newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->ws_protocol;
}

ErrorCode ConnectResponse::error () {
    RETVAL = THIS->error;
}
