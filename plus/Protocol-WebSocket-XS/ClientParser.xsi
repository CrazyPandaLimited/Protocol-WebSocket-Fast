MODULE = Protocol::WebSocket::XS                PACKAGE = Protocol::WebSocket::XS::ClientParser
PROTOTYPES: DISABLE

BOOT {
    Stash client_parser_stash("Protocol::WebSocket::XS::ClientParser", GV_ADD);
    client_parser_stash.mark_as_loaded(main_stash);
    client_parser_stash.inherit(parser_stash);
}

ClientParser* new (SV* CLASS) {
    RETVAL = new ClientParser();
    PROTO = CLASS;
}

size_t ClientParser::max_handshake_size (SV* newval = NULL) {
    if (newval) THIS->max_handshake_size = SvUV(newval);
    RETVAL = THIS->max_handshake_size;
}

string ClientParser::connect_request (ConnectRequestSP req)

ConnectResponseSP ClientParser::connect (string buf) {
    RETVAL = THIS->connect(buf);
}
