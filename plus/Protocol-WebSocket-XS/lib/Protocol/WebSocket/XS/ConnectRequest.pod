=head1 NAME

Protocol::WebSocket::XS::ConnectRequest - Client-initiated HTTP request for establishing websocket connection

=cut

=head1 SYNOPSIS

    use Protocol::WebSocket::XS::ConnectRequest;
    use Protocol::HTTP::Request;

    use URI::XS;

    my $request = Protocol::WebSocket::XS::ConnectRequest->new({
        method        => METHOD_GET,
        uri           => URI::XS->new("ws://example.com/"),
        headers       => { 'Origin' => 'http://www.crazypanda.ru'},
        ws_key        => 'dGhlIHNhbXBsZSBub25jZQ==',
        ws_version    => 13,
        ws_protocol   => "chat",
        ws_extensions => [["ext1"], ["ext2", {arg1 => 1}]],
    }); # => isa 'Protocol::HTTP::Request'

    $request->ws_key;                               # => 'dGhlIHNhbXBsZSBub25jZQ==';
    $request->ws_key('xxxxxxxxxxxxxxxxxxxxxx==');
    $request->ws_key;                               # => 'xxxxxxxxxxxxxxxxxxxxxx==';

    $request->ws_version;                           # => 13
    $request->ws_version(14);
    $request->ws_version;                           # => 14

    $request->ws_protocol;                          # => 'chat'
    $request->ws_protocol('bla-bla');
    $request->ws_protocol;                          # => 'bla-bla'

    $request->ws_extensions;                        # => is_deeply ([["ext1"], ["ext2", {arg1 => 1}]])
    $request->ws_extensions([]);
    $request->ws_extensions;                        # => is_deeply([])


=head1 DESCRIPTION

Extends base class L<Protocol::HTTP::Request> with websocket-related
details (headers), namely:

1. Hard-coded headers, required by L<Protocol::WebSocket::XS>, e.g.
C<Sec-WebSocket-Version>.

2. User-defined websocket headers, e.g. C<Sec-WebSocket-Protocol>.

3. An extension required header, if the extension was enabled, e.g.
C<Sec-WebSocket-Extensions>

4. User-supplied custom headers, if needed.

=head1 METHODS

=head2 new($params)

=head2 init($params)

Additional params on top of C<Protocol::WebSocket::XS::HTTPRequest::init>

=over 2

=item ws_key (string)

See L<rfc6455|https://tools.ietf.org/html/rfc6455> (look for C<Sec-WebSocket-Key>)

=item ws_version (int)

See L<rfc6455|https://tools.ietf.org/html/rfc6455> (look for C<Sec-WebSocket-Version>).

At the moment only version C<13> is supported by the module.

=item ws_protocol (string)

Identifies application specific communication protocol.

See L<rfc6455|https://tools.ietf.org/html/rfc6455> (look for C<Sec-WebSocket-Protocol>).

=item ws_extensions(array)

Additional extensions, which client would like to use. The extensions, which are provided
by the module and enabled by user (default), will be added automatically by
L<Protocol::WebSocket::XS::ClientParser>.

User-supplied extensions wasn't tested yet, but it should be possible to let them work
at L<Protocol::WebSocket::XS::Frame> or L<Protocol::WebSocket::XS::Message> level.

=back

=head2 ws_key()

=head2 ws_key($string)

=head2 ws_version()

=head2 ws_version($int)

=head2 ws_protocol()

=head2 ws_protocol($string)

=head2 ws_extensions()

=head2 ws_extensions($array)

=head1 SEE ALSO

L<rfc6455|https://tools.ietf.org/html/rfc6455>

L<Protocol::WebSocket::XS>

L<Protocol::WebSocket::XS::ClientParser>

L<Protocol::WebSocket::XS::ConnectResponse>

L<Protocol::WebSocket::XS::HTTPRequest>

L<Protocol::WebSocket::XS::ServerParser>

L<URI::XS>

=head1 AUTHOR

Pronin Oleg <syber@cpan.org>, Crazy Panda LTD

Ivan Baidakou <dmol@cpan.org>, Crazy Panda LTD

=head1 LICENSE

You may distribute this code under the same terms as Perl itself.

=cut
