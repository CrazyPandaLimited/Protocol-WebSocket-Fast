=head1 NAME

Protocol::WebSocket::XS::ClientParser - Client-side specialization of websocket parser

=cut

=head1 SYNOPSIS

    use Protocol::WebSocket::XS::ClientParser;
    use URI::XS;


    my $client = Protocol::WebSocket::XS::ClientParser->new;

    # create request to be sent via network to server
    my $req_str = $client->connect_request({
        uri           => URI::XS->new("ws://example.com/"),
        ws_key        => "dGhlIHNhbXBsZSBub25jZQ==",
        ws_protocol   => "chat",
        ws_extensions => [ [ 'permessage-deflate'] ],
        headers       => {
            'Origin'          => 'http://www.crazypanda.ru',
            'User-Agent'      => 'My-UA',
        },
    });

    # receive server-reply from network
    my $reply = '';
    # establish connection and finish negotiation phase
    $client->connect($reply);

    if ($client->established) {
        # ...
    }

=head1 DESCRIPTION

Client-side specialization of L<Protocol::WebSocket::XS::Parser>.

=head1 METHODS

=head2 connect_request($request)

Returns serialized HTTP-request for server, with all supported extensions preconfigured
(see L<Parser|Protocol::WebSocket::XS::Parser>). Extensions-related headers (currently only
C<per-message deflate>) are automatically added.

See L<Protocol::WebSocket::XS::ConnectRequest> for details.

=head2 connect($server_reply)

Parses the server HTTP-responce to the initial HTTP-requests. All supported extensions
will be enabled in the parser for furher usage, is server agrees to use them.

Returns L<Protocol::WebSocket::XS::ConnectResponse>, which can be ignored if you don't care.

=head1 SEE ALSO

L<rfc6455|https://tools.ietf.org/html/rfc6455>

L<Protocol::WebSocket::XS>

L<Protocol::WebSocket::XS::ConnectRequest>

L<Protocol::WebSocket::XS::ConnectResponse>

L<Protocol::WebSocket::XS::Parser>

L<Protocol::WebSocket::XS::ServerParser>


=head1 AUTHOR

Pronin Oleg <syber@cpan.org>, Crazy Panda LTD

Ivan Baidakou <i.baydakov@dev.crazypanda.ru>, Crazy Panda LTD

=head1 LICENSE

You may distribute this code under the same terms as Perl itself.

=cut
