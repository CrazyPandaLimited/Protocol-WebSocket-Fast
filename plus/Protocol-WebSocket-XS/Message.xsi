MODULE = Protocol::WebSocket::XS                PACKAGE = Protocol::WebSocket::XS::Message
PROTOTYPES: DISABLE

BOOT {
    Stash message_stash("Protocol::WebSocket::XS::Message", GV_ADD);
    message_stash.mark_as_loaded(main_stash);
}

string Message::error () {
    if (!THIS->error) XSRETURN_UNDEF;
    RETVAL = THIS->error;
}

int Message::opcode () {
    RETVAL = (int)THIS->opcode();
}

bool Message::is_control ()

size_t Message::payload_length ()

Simple Message::payload () {
    RETVAL = strings_to_sv(aTHX_ THIS->payload);
}

uint16_t Message::close_code ()

string Message::close_message ()

int Message::frame_count () {
    RETVAL = THIS->frame_count;
}