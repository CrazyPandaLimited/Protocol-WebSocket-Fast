MODULE = Protocol::WebSocket::XS                PACKAGE = Protocol::WebSocket::XS::HTTPResponse
PROTOTYPES: DISABLE

BOOT {
    Stash(__PACKAGE__).inherit("Protocol::WebSocket::XS::HTTPPacket");
}

Object new (SV* CLASS, Hash params = Hash()) {
    RETVAL = xs::out(new HTTPResponse(), CLASS);
    if (params) RETVAL.call<void>("init", ST(1));
}

void HTTPResponse::init (Hash params) {
    Scalar val;
    if ((val = params.fetch("code")))    THIS->code = SvIV(val);
    if ((val = params.fetch("message"))) THIS->message = xs::in<string>(aTHX_ val);
    Object(ST(0)).call_super(cv, &ST(1), items-1);
}

int HTTPResponse::code (SV* newval = NULL) {
    if (newval) {
        THIS->code = SvIV(newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->code;
}

string HTTPResponse::message (SV* newval = NULL) {
    if (newval) {
        THIS->message = xs::in<string>(aTHX_ newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->message;
}
