MODULE = Protocol::WebSocket::XS                PACKAGE = Protocol::WebSocket::XS::HTTPRequest
PROTOTYPES: DISABLE

BOOT {
    Stash(__PACKAGE__).inherit("Protocol::WebSocket::XS::HTTPPacket");
}

Object new (SV* CLASS, Hash params = Hash()) {
    RETVAL = xs::out(new HTTPRequest(), CLASS);
    if (params) RETVAL.call<void>("init", ST(1));
}

void HTTPRequest::init (Hash params) {
    Scalar val;
    
    if ((val = params.fetch("method"))) THIS->method = xs::in<string>(aTHX_ val);
    
    if ((val = params.fetch("uri"))) {
        if (val.is_object_ref()) THIS->uri = xs::in<URI*>(val);
        else THIS->uri = new URI(xs::in<string>(aTHX_ val));
    }
    
    Object(ST(0)).call_super(cv, &ST(1), items-1);
}

string HTTPRequest::method (SV* newval = NULL) {
    if (newval) {
        THIS->method = xs::in<string>(aTHX_ newval);
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->method;
}

URI* HTTPRequest::uri (URI* newval = NULL) {
    if (newval) {
        THIS->uri = newval;
        XSRETURN_UNDEF;
    }
    RETVAL = THIS->uri;
}
